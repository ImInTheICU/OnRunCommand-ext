name: Compiler

on:
    push:
        branches:
            - '**'
    pull_request:

jobs:
    versioning:
        permissions:
            contents: write
        runs-on: ubuntu-latest
        container:
            image: registry.gitlab.steamos.cloud/steamrt/sniper/sdk
        outputs:
            version: ${{ steps.version.outputs.version }}
        steps:
            - name: Packages
              shell: bash
              run: |
                  sudo apt update
                  sudo apt install -y curl jq
                                             
            - name: Generate version
              uses: reecetech/version-increment@2024.4.4
              id: version
              with:
                release_branch: master
                increment: patch
                use_api: true

    build:
        name: Build
        needs: versioning
        runs-on: ${{ matrix.os }}
        env:
            MMSOURCE20: ${{ github.workspace }}/${{ github.event.repository.name }}/alliedmodders/metamod
            HL2SDKCS2: ${{ github.workspace }}/${{ github.event.repository.name }}/alliedmodders/hl2sdk
        container: ${{ matrix.container }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest]
                include:
                    - os: ubuntu-latest
                      container: registry.gitlab.steamos.cloud/steamrt/sniper/sdk

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  path: ${{ github.event.repository.name }}
                  submodules: recursive

            - name: Checkout AMBuild
              uses: actions/checkout@v4
              with:
                  repository: alliedmodders/ambuild
                  path: ambuild

            - name: Install AMBuild
              run: |
                  cd ambuild; python setup.py install; cd ..

            - name: Setup Version
              shell: bash
              run: echo "VERSION=${{needs.versioning.outputs.version}}" >> $GITHUB_ENV

            - name: Build - Linux
              if: matrix.os == 'ubuntu-latest'
              working-directory: ${{ github.event.repository.name }}
              shell: bash
              run: |
                  sudo apt update
                  sudo apt install -y libreadline-dev libboost-all-dev fdupes unzip
                  bash ./setup.sh

            - name: Build - Windows
              if: matrix.os == 'windows-latest'
              working-directory: ${{ github.event.repository.name }}
              run: |
                  ./setup.ps1

            - name: Upload Artifacts Linux
              if: matrix.os == 'ubuntu-latest'
              uses: actions/upload-artifact@v4
              with:
                  name: Extension.Linux
                  path: ${{ github.workspace }}/${{ github.event.repository.name }}/build/package
                  
            - name: Upload Artifacts Windows
              if: matrix.os == 'windows-latest'
              uses: actions/upload-artifact@v4
              with:
                  name: Extension.Windows
                  path: ${{ github.workspace }}/${{ github.event.repository.name }}/build/package